@tailwind base;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 248, 250, 252;  /* Light blue-gray */
  --background-end-rgb: 255, 255, 255;   /* White */
  --code-bg: rgba(241, 245, 249, 0.8);   /* Light gray for code blocks */
  --card-bg: rgba(255, 255, 255, 0.9);   /* White with slight transparency */
  --border-color: rgba(203, 213, 225, 0.5); /* Light gray border */
}

.dark {
  --foreground-rgb: 255, 255, 255;       /* White text */
  --background-start-rgb: 15, 23, 42;     /* Dark blue */
  --background-end-rgb: 2, 6, 23;         /* Darker blue */
  --code-bg: rgba(30, 41, 59, 0.8);       /* Dark blue-gray */
  --card-bg: rgba(15, 23, 42, 0.9);       /* Semi-transparent dark blue */
  --border-color: rgba(30, 41, 59, 0.5);  /* Dark border */
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  transition: background-color 0.3s ease, color 0.3s ease;
}

body {
  color: rgb(var(--foreground-rgb));
  background-color: rgb(var(--background-start-rgb));
  min-height: 100vh;
  
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('assets/images/JsonBackground.png');
    background-size: 300px;
    background-repeat: repeat;
    opacity: 1;  /* Full opacity in light mode */
    z-index: -1;
    pointer-events: none;
  }
  
  /* Dark mode specific background */
  .dark &::before {
    opacity: 0.08;  /* Slightly transparent in dark mode */
  }

  /* Ensure content is above the background */
  > * {
    position: relative;
    z-index: 1;
  }
}

/* JSON Syntax Highlighting */
.token {
  &.property {
    color: #000000; /* Black for JSON keys */
    font-weight: 600;
  }
  
  &.punctuation {
    color: #9c27b0; /* Purple for braces and brackets */
    font-weight: 600;
  }
  
  &.string {
    color: #2e7d32; /* Dark green for string values */
  }
  
  &.number {
    color: #1565c0; /* Blue for numbers */
  }
  
  &.boolean {
    color: #7b1fa2; /* Purple for booleans */
    font-weight: 600;
  }
  
  &.null {
    color: #9e9e9e; /* Gray for null values */
  }
}

/* Dark mode overrides */
.dark {
  --border-color: rgba(71, 85, 105, 0.5);
  --border-color-hover: rgba(100, 116, 139, 0.5);
  
  .token {
    &.property {
      color: #ffffff; /* White for JSON keys in dark mode */
    }
    
    &.punctuation {
      color: #ce93d8; /* Lighter purple for braces in dark mode */
    }
  }
  
  .mat-mdc-card {
    background-color: rgba(30, 41, 59, 0.8);
    color: #f8fafc;
    border: 1px solid var(--border-color);
  }

  .mat-mdc-form-field {
    --mdc-filled-text-field-container-color: rgba(30, 41, 59, 0.8);
    --mdc-filled-text-field-input-text-color: #f8fafc;
    --mdc-filled-text-field-label-text-color: #94a3b8;
    --mdc-filled-text-field-focus-label-text-color: #60a5fa;
    --mdc-filled-text-field-focus-active-indicator-color: #60a5fa;
    --mdc-filled-text-field-focus-active-indicator-height: 2px;
  }
  
  /* Add border to all elements with border class */
  .border {
    border-color: var(--border-color) !important;
  }
  
  /* Style for buttons and interactive elements */
  button, .btn, .mat-mdc-button {
    border-color: var(--border-color) !important;
    
    &:hover {
      border-color: var(--border-color-hover) !important;
    }
  }
  
  /* Style for input fields */
  .mat-mdc-text-field-wrapper {
    border: 1px solid var(--border-color);
    border-radius: 4px;
    
    &:hover {
      border-color: var(--border-color-hover);
    }
  }
  
  /* Style for the tree view */
  .tree-view {
    --tree-border-color: var(--border-color);
    
    .node {
      &.expandable {
        border-left: 1px solid var(--tree-border-color);
      }
    }
  }
  
  /* Adjust card backgrounds */
  .mat-mdc-card {
    background-color: var(--card-bg) !important;
  }
  
  /* Global button overrides for dark mode */
  .mat-mdc-raised-button:not(:disabled) {
    background-color: #334155 !important;
    color: #f1f5f9 !important;
    border: 1px solid #475569 !important;
  }
  
  .mat-mdc-raised-button.mat-primary:not(:disabled) {
    background-color: #3f51b5 !important;
  }
  
  .mat-mdc-raised-button.mat-accent:not(:disabled) {
    background-color: #0d9488 !important;
  }
}

/* Global button styles */
.mat-mdc-raised-button:not(:disabled) {
  background-color: #e2e8f0 !important;
  color: #1e293b !important;
  border: 1px solid #cbd5e1 !important;
  
  &:hover {
    background-color: #cbd5e1 !important;
  }
}

.mat-mdc-raised-button.mat-primary:not(:disabled) {
  background-color: #3f51b5 !important;
  color: white !important;
  
  &:hover {
    background-color: #303f9f !important;
  }
}

.mat-mdc-raised-button.mat-accent:not(:disabled) {
  background-color: #0d9488 !important;
  color: white !important;
  
  &:hover {
    background-color: #0f766e !important;
  }
}

/* Formatter action buttons */
.formatter-container {
  .action-buttons {
    button[mat-raised-button] {
      width: 100%;
      margin-bottom: 8px;
      text-align: left;
      padding: 0 16px;
      border-radius: 4px;
      
      mat-icon {
        margin-right: 8px;
      }
    }
  }
}

/* Code syntax highlighting */
pre {
  code {
    display: block;
    padding: 1em;
    overflow-x: auto;
    line-height: 1.5;
    font-family: 'Fira Code', 'Consolas', 'Monaco', 'Andale Mono', monospace;
    tab-size: 2;
    -moz-tab-size: 2;
    -o-tab-size: 2;
    -webkit-tab-size: 2;
  }
  
  /* JSON specific styling */
  .token.punctuation {
    color: #9ca3af; /* Default punctuation color */
    
    &.property-quote,
    &.string {
      color: #9ca3af; /* Color for quotes around keys */
    }
    
    &.bracket,
    &.brace {
      color: #60a5fa; /* Blue color for braces and brackets */
    }
    
    &.colon {
      color: #9ca3af; /* Color for colon */
    }
  }
  
  /* JSON keys */
  .token.property {
    color: #3b82f6; /* Blue for keys */
    font-weight: 600;
  }
  
  /* JSON string values */
  .token.string {
    color: #10b981; /* Green for string values */
    font-weight: normal;
  }
  
  /* JSON numbers and booleans */
  .token.number,
  .token.boolean {
    color: #f472b6; /* Pink for numbers and booleans */
    font-weight: normal;
  }
  
  /* JSON null */
  .token.keyword {
    color: #f59e0b; /* Orange for null */
    font-weight: normal;
  }
  
  /* Comments and other elements */
  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: #6b7280;
  }
}

/* Dark theme overrides */
.dark {
  pre {
    code {
      background-color: rgba(30, 41, 59, 0.5);
      border-radius: 0.375rem;
      
      .token.punctuation {
        color: #d1d5db;
        
        &.bracket,
        &.brace {
          color: #60a5fa; /* Brighter blue for braces in dark mode */
        }
        
        &.property-quote,
        &.string {
          color: #9ca3af;
        }
      }
      
      .token.property {
        color: #93c5fd; /* Lighter blue for keys in dark mode */
        font-weight: 500;
      }
      
      .token.string {
        color: #86efac; /* Brighter green for strings in dark mode */
      }
      
      .token.number,
      .token.boolean {
        color: #f9a8d4; /* Brighter pink for numbers in dark mode */
      }
      
      .token.keyword {
        color: #fbbf24; /* Brighter orange for null in dark mode */
      }
      
      .token.comment,
      .token.prolog,
      .token.doctype,
      .token.cdata {
        color: #9ca3af;
      }
    }
  }
}

/* FAQ Panel Title Styles */
.mat-expansion-panel-header-title {
  font-weight: 700 !important;
  font-size: 1.25rem !important;
  
  mat-panel-title {
    font-size: inherit !important;
    font-weight: inherit !important;
  }
}

/* Dark mode overrides for FAQ panel title */
.dark-theme .mat-expansion-panel-header-title {
  color: var(--text-color) !important;
}

/* Custom scrollbar for dark mode */
.dark ::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.dark ::-webkit-scrollbar-track {
  background: #1e293b;
}

.dark ::-webkit-scrollbar-thumb {
  background: #475569;
  border-radius: 4px;
}

.dark ::-webkit-scrollbar-thumb:hover {
  background: #64748b;
}
